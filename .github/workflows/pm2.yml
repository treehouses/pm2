name: build on change

on: 
  push:
    branches:
      - master
      - main
      - fix-docker-push
    workflow_dispatch:
    repository_dispatch:
      types: pm2 

jobs:
  pm2:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: login to docker
        run: docker login -u ${{ secrets.DOCKERUSERNAME }} -p ${{ secrets.DOCKERAPIKEY }}
      - name: treehouses pm2
        run: |
          export DOCKER_CLI_EXPERIMENTAL=enabled
          repo="treehouses/pm2"
          base="treehouses/node"
          source .github/workflows/utils.sh
          echo "amd64"
          baseamd64=$(get_manifest_sha "$base:latest" "amd64")
          echo $baseamd64
          repoamd64=$(get_manifest_sha "$repo:latest" "amd64")
          echo $repoamd64
          echo "flag amd64"
          flag_amd64=$(is_base "$base@"$baseamd64 "$repo@"$repoamd64)
          echo $flag_amd64
          echo "arm"
          basearm=$(get_manifest_sha "$base:latest" "arm")
          echo $basearm
          repoarm=$(get_manifest_sha "$repo:latest" "arm")
          echo $repoarm
          flagarm=$(is_base "$base@"$basearm "$repo@"$repoarm)
          echo "flag arm"
          echo $flagarm
          echo "arm64"
          basearm64=$(get_manifest_sha "$base:latest" "arm64")
          echo $basearm64
          repoarm64=$(get_manifest_sha "$repo:latest" "arm64")
          echo $repoarm64
          echo "flag arm64"
          flagarm64=$(is_base "$base@"$basearm64 "$repo@"$repoarm64)
          echo $flagarm64
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          build_image "$base:latest" arm "$repo"
          build_image "$base:latest" amd64 "$repo"
          build_image "$base:latest" arm64 "$repo"
          flag=$(compare "$base@"$basearm "$repo@"$repoarm "$base@"$baseamd64 "$repo@"$repoamd64 "$base@"$basearm64 "$repo@"$repoarm64 "$repo" "$repo-tags:amd64")
          echo $flag
          if [[ $flag == true ]]; then
            deploy_image "$repo" arm
            deploy_image "$repo" amd64
            deploy_image "$repo" arm64
            sudo npm install -g @treehouses/cli
            export gitter_channel="${{ secrets.CHANNEL }}"
            echo "tags"
            tag=$(date +%Y%m%d%H%M)
            tag2="latest"
            echo $tag
            create_manifest $repo $tag $tag2 $repo-tags:amd64 $repo-tags:arm $repo-tags:arm64
            docker manifest inspect $repo:$tag
            docker manifest inspect $repo:$tag2
            docker manifest push $repo:$tag; docker manifest push $repo:$tag2
            echo "https://hub.docker.com/r/treehouses/pm2/tags"
            treehouses feedback "new treehouses/pm2 check https://hub.docker.com/r/treehouses/pm2/tags"
          else
            echo "no changes"
          fi

          
